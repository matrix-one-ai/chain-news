/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 ./public/glbs/screen.glb --output ./app/components/gltf/Screen.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Curve: THREE.Mesh
    Curve001: THREE.Mesh
    face: THREE.Mesh
  }
  materials: {
    SVGMat: THREE.MeshStandardMaterial
    ['SVGMat.001']: THREE.MeshStandardMaterial
    ['screens.001']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glbs/screen.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Curve.geometry} material={materials.SVGMat} position={[-2.082, 1.404, -1.334]} rotation={[Math.PI / 2, 0, 0]} scale={4.654} />
      <mesh geometry={nodes.Curve001.geometry} material={materials['SVGMat.001']} position={[-2.082, 1.404, -1.334]} rotation={[Math.PI / 2, 0, 0]} scale={4.654} />
      <mesh geometry={nodes.face.geometry} material={materials['screens.001']} position={[-2.082, 1.404, -1.334]} rotation={[Math.PI / 2, 0, 0]} scale={4.654} />
    </group>
  )
}

useGLTF.preload('/glbs/screen.glb')
